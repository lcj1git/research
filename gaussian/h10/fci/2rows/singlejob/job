#!/bin/bash
#run casscf(10,10) E calculations for 10 H atoms in a triangualr lattice, stretching heigh while compressing width of triangles

declare -i linenum
declare -i n=3
declare -x y=0.76
declare -x rrt3=0.5773503 #RECIPROCAL of the square root of 3
declare -a e
declare -a m=1 
comfile='h10.com'
logfile='h10.log'
chkfile='h10.chk'


echo '%chk='$chkfile > $comfile
echo ' ' >> $comfile
if [ $n -eq 1 ]
then
	echo '#t casscf(10,10,davidsondiag)/gen scf(tight,novaracc,noincfock) geom=nocrowd test' >> $comfile
#	echo '#t casscf(10,10,davidsondiag)/gen scf(tight,novaracc,noincfock) guess=read geom=nocrowd test' >> $comfile
else
	echo '#t casscf(10,10,nroot='$n',davidsondiag)/gen scf(tight,novaracc,noincfock) geom=nocrowd test' >> $comfile
#	echo '#t casscf(10,10,nroot='$n',davidsondiag)/gen scf(tight,novaracc,noincfock) guess=read geom=nocrowd test' >> $comfile
fi
echo ' ' >> $comfile
y2=$(bc <<< "scale=6; $y * 2")
x=$(bc <<< "scale=6; $rrt3 / $y")
x2=$(bc <<< "scale=6; $x * 2")
x3=$(bc <<< "scale=6; $x * 3")
echo 'mbs casscf calculation for a triangular lattice of 8 H atoms (made up of 10 iscosceles triangles h='$y'b='$x2')' >> $comfile
echo ' ' >> $comfile
echo '0 '$m >> $comfile
echo 'H '$x' 0.0 '$y2 >> $comfile
echo 'H '$x3' 0.0 '$y2 >> $comfile
echo 'H 0.0 0.0 '$y >> $comfile
echo 'H '$x2' 0.0 '$y >> $comfile
echo 'H -'$x' 0.0 0.0' >> $comfile
echo 'H '$x' 0.0 0.0' >> $comfile
echo 'H -'$x2' 0.0 -'$y >> $comfile
echo 'H 0.0 0.0 -'$y >> $comfile
echo 'H -'$x3' 0.0 -'$y2 >> $comfile
echo 'H -'$x' 0.0 -'$y2 >> $comfile
echo ' ' >> $comfile
echo '@H.gbs' >> $comfile
echo ' ' >> $comfile
#send calculation to gaussian
g09 < $comfile >& $logfile
#grab e from output                       
estring=$(grep 'EIGENVALUE' $logfile |tail -1)
e[$n]=$(echo $estring | grep -o -E '\-*[0-9]+\.[0-9]{5}[0-9]*\s*')
if [[ ${e[$n]} = "" ]]
then
	linenumstring=$(grep -n '... Do an extra-iteration for final printing.' $logfile)
	linenum=$(echo $linenumstring | grep -o -E '[0-9]+')
	linenum=$linenum-1
	estring=$(head -$linenum $logfile | tail -1)
	e[$n]=$(echo $estring | grep -o -E '\-*[0-9]+\.[0-9]+\s')
	if [[ ${e[$n]} = "" ]]
	then
		e[$n]='FC'
	fi
fi
cp $chkfile 'h10n'$n'.chk'
echo $y $n ${e[$n]}
