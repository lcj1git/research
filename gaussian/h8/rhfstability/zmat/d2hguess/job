#!/bin/bash
#run rhf stability calculation using gaussian
#writes rhf E, rhf HOMO-1 -> LUMO+1 E's, RRHF,CRHF,RUHF hessian eigenvalues

declare -i linenum
declare -x step=1 #in alpha (degrees), not y
declare -i keepgoing=1
#vars for distortion param 
declare -x alpha
declare -x y
declare -x alphai=45.0
declare -x yi=0.25
declare -x yf=2.5
#output files and gaussian files
comfile='h8.com'
logfile='h8.log'
hessfile='h8hess'
mofile='h8MOE'
efile='h8RHFE'

mkdir fwd bck
mkdir fwd/com fwd/log bck/com bck/log
cp writez fwd/.
cp writez bck/.
cp H.gbs fwd/.
cp H.gbs bck/.

#loop for highsymm->yi
cd bck
cp ../guess.chk h8.chk
alpha=$alphai
#file headers
#echo '#HF isntabilities: hessian eigenvalues' > $hessfile
#echo '#y','rrhf','crhf','ruhf' >> $hessfile
#echo '#RHF MO Energies' > $mofile
#echo '#y','E of SHOMO', 'E of HOMO', 'E of LUMO', 'E of SLUMO', 'HOMO LUMO difference' >> $mofile
#echo '#RHF Energy of H10' > $efile
#begin loop
while [ $keepgoing -eq 1 ]; do
#create input file for gaussian
	echo $alpha > tmp
        ./writez < tmp > $comfile
	y=$(grep -o -E '\-*[0-9]+\.[0-9]*' fort.8)
	rm tmp fort.8
#run gaussian
        g09 < $comfile >& $logfile
#grab eigenvals from ouput
#rrhf
        stabstring=$(grep -E 'Internal RHF' $logfile)
        rrhf=$(echo $stabstring | grep -o -E '\-*[0-9]+\.[0-9]*')
        linenum=$linenum+1
#crhf
        stabstring=$(grep -E 'RRHF.*CRHF' $logfile)
        crhf=$(echo $stabstring | grep -o -E '\-*[0-9]+\.[0-9]*')
#ruhf
        stabstring=$(grep -E 'RRHF.*RUHF' $logfile)
        ruhf=$(echo $stabstring | grep -o -E '\-*[0-9]+\.[0-9]*')
#write to file stable
        echo $alpha $y $rrhf $crhf $ruhf >> $hessfile

        estring=$(grep -E 'SCF Done:' $logfile)
        estring=$(echo $estring | grep -o -E '\-*[0-9]+\.[0-9]*')
        echo $alpha $y $estring >> $efile
        occmostring=$(grep -E 'Alpha  occ. eigenvalues' $logfile)
        occmostring=$(echo $occmostring | grep -o -E '\-*[0-9]+\.[0-9]*')
        occmo=($occmostring)
        virtmostring=$(grep -E 'Alpha virt. eigenvalues' $logfile)
        virtmostring=$(echo $virtmostring | grep -o -E '\-*[0-9]+\.[0-9]*')
        virtmo=($virtmostring)
	gap=$(echo ${virtmo[0]} - ${occmo[3]} | bc)
        echo $alpha $y ${occmo[2]} ${occmo[3]} ${virtmo[0]} ${virtmo[1]} $gap >> $mofile

	cp $comfile 'com/'$comfile'_alpha'$alpha
	cp $logfile 'log/'$logfile'_alpha'$alpha

#check if y is less than yi, if so keepgoing = 0, if not keepgoing = 1.
	alpha=$(echo $alpha - $step | bc)
        keepgoing=$(echo "$y > $yi" | bc -l)
#end loop
done
cd ..
#end of highsymm->yi loop
#loop for highsymm->yf
cd fwd
cp ../guess.chk h8.chk
alpha=$alphai
keepgoing=1
while [ $keepgoing -eq 1 ]; do
#create input file for gaussian
	echo $alpha > tmp
        ./writez < tmp > $comfile
	y=$(grep -o -E '\-*[0-9]+\.[0-9]*' fort.8)
	rm tmp fort.8
#run gaussian
        g09 < $comfile >& $logfile
#grab eigenvals from ouput
#rrhf
        stabstring=$(grep -E 'Internal RHF' $logfile)
        rrhf=$(echo $stabstring | grep -o -E '\-*[0-9]+\.[0-9]*')
        linenum=$linenum+1
#crhf
        stabstring=$(grep -E 'RRHF.*CRHF' $logfile)
        crhf=$(echo $stabstring | grep -o -E '\-*[0-9]+\.[0-9]*')
#ruhf
        stabstring=$(grep -E 'RRHF.*RUHF' $logfile)
        ruhf=$(echo $stabstring | grep -o -E '\-*[0-9]+\.[0-9]*')
#write to file stable
        echo $alpha $y $rrhf $crhf $ruhf >> $hessfile

        estring=$(grep -E 'SCF Done:' $logfile)
        estring=$(echo $estring | grep -o -E '\-*[0-9]+\.[0-9]*')
        echo $alpha $y $estring >> $efile
        occmostring=$(grep -E 'Alpha  occ. eigenvalues' $logfile)
        occmostring=$(echo $occmostring | grep -o -E '\-*[0-9]+\.[0-9]*')
        occmo=($occmostring)
        virtmostring=$(grep -E 'Alpha virt. eigenvalues' $logfile)
        virtmostring=$(echo $virtmostring | grep -o -E '\-*[0-9]+\.[0-9]*')
        virtmo=($virtmostring)
	gap=$(echo ${virtmo[0]} - ${occmo[3]} | bc)
        echo $alpha $y ${occmo[2]} ${occmo[3]} ${virtmo[0]} ${virtmo[1]} $gap >> $mofile

	cp $comfile 'com/'$comfile'_alpha'$alpha
	cp $logfile 'log/'$logfile'_alpha'$alpha

#check if y is less than yi, if so keepgoing = 0, if not keepgoing = 1.
	alpha=$(echo $alpha + $step | bc)
        keepgoing=$(echo "$yf > $y" | bc -l)
#end loop
done
cd ..
